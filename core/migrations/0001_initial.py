# Generated by Django 5.2.7 on 2025-10-07 06:05

import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('username', models.CharField(max_length=150, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('employee_id', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('phone_number', models.CharField(max_length=20)),
                ('commission_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_active_salesman', models.BooleanField(default=False)),
                ('hire_date', models.DateField(null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('password_reset_token', models.CharField(blank=True, max_length=100, null=True)),
                ('password_reset_sent_at', models.DateTimeField(blank=True, null=True)),
                ('failed_login_attempts', models.IntegerField(default=0)),
                ('last_failed_login', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'users',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', models.CharField(max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='clients_created', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_date', models.DateField()),
                ('appointment_time', models.TimeField()),
                ('duration_minutes', models.IntegerField(default=60)),
                ('appointment_type', models.CharField(choices=[('zoom', 'Zoom'), ('in_person', 'In-Person')], max_length=20)),
                ('status', models.CharField(choices=[('confirmed', 'Confirmed'), ('completed', 'Completed'), ('canceled', 'Canceled'), ('no_show', 'No Show')], default='confirmed', max_length=20)),
                ('zoom_link', models.URLField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('commission_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('cancellation_reason', models.CharField(blank=True, choices=[('client_request', 'Client Requested Cancellation'), ('no_show', 'Client No-Show'), ('salesman_unavailable', 'Salesman Unavailable'), ('duplicate', 'Duplicate Booking'), ('other', 'Other')], max_length=50)),
                ('cancellation_notes', models.TextField(blank=True)),
                ('canceled_at', models.DateTimeField(blank=True, null=True)),
                ('is_locked', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('canceled_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bookings_canceled', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bookings_created', to=settings.AUTH_USER_MODEL)),
                ('salesman', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bookings', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bookings_updated', to=settings.AUTH_USER_MODEL)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bookings', to='core.client')),
            ],
            options={
                'ordering': ['appointment_date', 'appointment_time'],
            },
        ),
        migrations.CreateModel(
            name='CompanyHoliday',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('date', models.DateField()),
                ('is_recurring_annually', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['date'],
                'indexes': [models.Index(fields=['date'], name='core_compan_date_8fcba8_idx')],
            },
        ),
        migrations.CreateModel(
            name='PayrollPeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('finalized', 'Finalized')], default='pending', max_length=20)),
                ('finalized_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('finalized_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='payrolls_finalized', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='PayrollAdjustment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adjustment_type', models.CharField(choices=[('bonus', 'Bonus'), ('penalty', 'Penalty'), ('correction', 'Correction'), ('cancellation_after_finalized', 'Cancellation After Finalized')], max_length=50)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('reason', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('booking', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='adjustments', to='core.booking')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='adjustments_created', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='payroll_adjustments', to=settings.AUTH_USER_MODEL)),
                ('payroll_period', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='adjustments', to='core.payrollperiod')),
            ],
        ),
        migrations.AddField(
            model_name='booking',
            name='payroll_period',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bookings', to='core.payrollperiod'),
        ),
        migrations.CreateModel(
            name='SystemConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(default='Revenue Acceleration Unit', max_length=200)),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('default_commission_rate', models.DecimalField(decimal_places=2, default=Decimal('50.00'), max_digits=10)),
                ('buffer_time_minutes', models.IntegerField(default=30)),
                ('reminder_lead_time_hours', models.IntegerField(default=24)),
                ('max_advance_booking_days', models.IntegerField(default=90)),
                ('min_advance_booking_hours', models.IntegerField(default=2)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('create', 'Create'), ('update', 'Update'), ('delete', 'Delete'), ('login', 'Login'), ('logout', 'Logout'), ('finalize', 'Finalize'), ('adjust', 'Adjust')], max_length=20)),
                ('entity_type', models.CharField(max_length=50)),
                ('entity_id', models.IntegerField()),
                ('changes', models.JSONField()),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['timestamp'], name='core_auditl_timesta_80074f_idx'), models.Index(fields=['user'], name='core_auditl_user_id_2ff9b7_idx'), models.Index(fields=['entity_type'], name='core_auditl_entity__246e0d_idx'), models.Index(fields=['entity_type', 'entity_id'], name='core_auditl_entity__244637_idx')],
            },
        ),
        migrations.CreateModel(
            name='AvailableTimeSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.IntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')])),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('appointment_type', models.CharField(choices=[('zoom', 'Zoom'), ('in_person', 'In-Person')], help_text='Type of appointments allowed in this slot', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='timeslots_created', to=settings.AUTH_USER_MODEL)),
                ('salesman', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='available_timeslots', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['salesman', 'day_of_week', 'start_time'],
                'indexes': [models.Index(fields=['salesman', 'day_of_week', 'appointment_type', 'is_active'], name='core_availa_salesma_a85a32_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='client',
            index=models.Index(fields=['email'], name='core_client_email_9bd669_idx'),
        ),
        migrations.AddIndex(
            model_name='client',
            index=models.Index(fields=['phone_number'], name='core_client_phone_n_dc5366_idx'),
        ),
        migrations.AddIndex(
            model_name='client',
            index=models.Index(fields=['email', 'phone_number'], name='core_client_email_409963_idx'),
        ),
        migrations.AddIndex(
            model_name='payrollperiod',
            index=models.Index(fields=['start_date'], name='core_payrol_start_d_d99060_idx'),
        ),
        migrations.AddIndex(
            model_name='payrollperiod',
            index=models.Index(fields=['status'], name='core_payrol_status_508cd9_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='payrollperiod',
            unique_together={('start_date', 'end_date')},
        ),
        migrations.AddIndex(
            model_name='payrolladjustment',
            index=models.Index(fields=['payroll_period'], name='core_payrol_payroll_6d2023_idx'),
        ),
        migrations.AddIndex(
            model_name='payrolladjustment',
            index=models.Index(fields=['user'], name='core_payrol_user_id_63be77_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['appointment_date'], name='core_bookin_appoint_e75185_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['salesman'], name='core_bookin_salesma_c1cd86_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['status'], name='core_bookin_status_fe12a1_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['salesman', 'appointment_date', 'status'], name='core_bookin_salesma_dc977c_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['payroll_period'], name='core_bookin_payroll_03737f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='booking',
            unique_together={('salesman', 'appointment_date', 'appointment_time')},
        ),
    ]
